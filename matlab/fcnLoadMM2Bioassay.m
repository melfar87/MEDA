function TB2 = fcnLoadMM2Bioassay(ScObj)

% TB = readcell('master_mix.log',...
%      'FileType','text');

clc
% TB = readtable('master_mix.log',...
%     'FileType','text',...
%     'ReadVariableNames',false,...
%     'Delimiter',{',',' '});
% head(TB)

% TB = {...
%     {'n00'}, {'Dis'}, {}, {}, {[15.5, 2.5]}                        ;...
%     {'n01'}, {'Dis'}, {}, {}, {[45.5, 2.5]}                        ;...
%     {'n02'}, {'Dis'}, {}, {}, {[15.5, 28.5]}                       ;...
%     {'n03'}, {'Dis'}, {}, {}, {[45.5, 28.5]}                       ;...
%     {'n04'}, {'Dis'}, {}, {'n20'}, {[15.5, 2.5]}                     ;...
%     {'n05'}, {'Dis'}, {}, {'n21'}, {[45.5, 2.5]}                     ;...
%     {'n06'}, {'Dis'}, {}, {'n21'}, {[15.5, 28.5]}                    ;...
%     {'n07'}, {'Dis'}, {}, {'n22'}, {[45.5, 28.5]}                    ;...
%     {'n08'}, {'Dis'}, {}, {'n23'}, {[15.5, 2.5]}                     ;...
%     {'n09'}, {'Dis'}, {}, {'n24'}, {[45.5, 2.5]}                     ;...
%     {'n10'}, {'Dis'}, {}, {'n24'}, {[15.5, 28.5]}                    ;...
%     {'n11'}, {'Dis'}, {}, {'n25'}, {[45.5, 28.5]}                    ;...
%     {'n12'}, {'Dis'}, {}, {'n26'}, {[15.5, 2.5]}                     ;...
%     {'n13'}, {'Dis'}, {}, {'n27'}, {[45.5, 2.5]}                     ;...
%     {'n14'}, {'Dis'}, {}, {'n27'}, {[15.5, 28.5]}                    ;...
%     {'n15'}, {'Dis'}, {}, {'n28'}, {[45.5, 28.5]}                    ;...
%     {'n16'}, {'Dis'}, {}, {'n29'}, {[15.5, 2.5]}                     ;...
%     {'n17'}, {'Dis'}, {}, {'n30'}, {[45.5, 2.5]}                     ;...
%     {'n18'}, {'Dis'}, {}, {'n30'}, {[15.5, 28.5]}                    ;...
%     {'n19'}, {'Dis'}, {}, {'n31'}, {[45.5, 28.5]}                    ;...
%     {'n20'}, {'Mix'}, {'n00', 'n21'}, {}, {[15.5, 20.5]}               ;...
%     {'n21'}, {'Dlt'}, {'n01', 'n02'}, {}, {[15.5, 10.5]}               ;...
%     {'n22'}, {'Mix'}, {'n21', 'n03'}, {}, {[45.5, 20.5]}               ;...
%     {'n23'}, {'Mix'}, {'n04', 'n24'}, {}, {[45.5, 20.5]}               ;...
%     {'n24'}, {'Dlt'}, {'n05', 'n06'}, {'n20', 'n22'}, {[15.5, 10.5]}       ;...
%     {'n25'}, {'Mix'}, {'n24', 'n07'}, {'n35'}, {[45.5, 10.5]}            ;...
%     {'n26'}, {'Mix'}, {'n08', 'n27'}, {'n36'}, {[45.5, 10.5]}            ;...
%     {'n27'}, {'Dlt'}, {'n09', 'n10'}, {'n23', 'n25'}, {[15.5, 10.5]}       ;...
%     {'n28'}, {'Mix'}, {'n27', 'n11'}, {'n38'}, {[15.5, 20.5]}            ;...
%     {'n29'}, {'Mix'}, {'n12', 'n30'}, {'n38'}, {[15.5, 20.5]}            ;...
%     {'n30'}, {'Dlt'}, {'n13', 'n14'}, {'n26', 'n28'}, {[15.5, 10.5]}       ;...
%     {'n31'}, {'Mix'}, {'n30', 'n15'}, {'n39'}, {[45.5, 20.5]}            ;...
%     {'n32'}, {'Mix'}, {'n16', 'n33'}, {'n40'}, {[45.5, 20.5]}            ;...
%     {'n33'}, {'Dlt'}, {'n17', 'n18'}, {'n29', 'n31'}, {[15.5, 10.5]}       ;...
%     {'n34'}, {'Mix'}, {'n33', 'n19'}, {'n41'}, {[45.5, 10.5]}            ;...
%     {'n35'}, {'Out'}, {'n20'}, {}, {[57.5, 15.5]}                    ;...
%     {'n36'}, {'Out'}, {'n22'}, {}, {[57.5, 15.5]}                    ;...
%     {'n37'}, {'Out'}, {'n23'}, {}, {[57.5, 15.5]}                    ;...
%     {'n38'}, {'Out'}, {'n25'}, {}, {[57.5, 15.5]}                    ;...
%     {'n39'}, {'Out'}, {'n26'}, {}, {[57.5, 15.5]}                    ;...
%     {'n40'}, {'Out'}, {'n28'}, {}, {[57.5, 15.5]}                    ;...
%     {'n41'}, {'Out'}, {'n29'}, {}, {[57.5, 15.5]}                    ;...
%     {'n42'}, {'Out'}, {'n31'}, {}, {[57.5, 15.5]}                    ;...
%     {'n43'}, {'Out'}, {'n32'}, {}, {[57.5, 15.5]}                    ;...
%     {'n44'}, {'Out'}, {'n34'}, {}, {[57.5, 15.5]}                    ;...
%     };

TB = {...
    {'n00'}, {'Dis'}, {}, {}, {[15.5, 2.5]}                        ;...
    {'n01'}, {'Dis'}, {}, {}, {[45.5, 2.5]}                        ;...
    {'n02'}, {'Dis'}, {}, {}, {[15.5, 28.5]}                       ;...
    {'n03'}, {'Dis'}, {}, {}, {[45.5, 28.5]}                       ;...
    {'n04'}, {'Dis'}, {}, {'n20'}, {[15.5, 2.5]}                     ;...
    {'n05'}, {'Dis'}, {}, {'n21'}, {[45.5, 2.5]}                     ;...
    {'n06'}, {'Dis'}, {}, {'n21'}, {[15.5, 28.5]}                    ;...
    {'n07'}, {'Dis'}, {}, {'n22'}, {[45.5, 28.5]}                    ;...
    {'n08'}, {'Dis'}, {}, {'n23'}, {[15.5, 2.5]}                     ;...
    {'n09'}, {'Dis'}, {}, {'n24'}, {[45.5, 2.5]}                     ;...
    {'n10'}, {'Dis'}, {}, {'n24'}, {[15.5, 28.5]}                    ;...
    {'n11'}, {'Dis'}, {}, {'n25'}, {[45.5, 28.5]}                    ;...
    {'n12'}, {'Dis'}, {}, {'n26'}, {[15.5, 2.5]}                     ;...
    {'n13'}, {'Dis'}, {}, {'n27'}, {[45.5, 2.5]}                     ;...
    {'n14'}, {'Dis'}, {}, {'n27'}, {[15.5, 28.5]}                    ;...
    {'n15'}, {'Dis'}, {}, {'n28'}, {[45.5, 28.5]}                    ;...
    {'n16'}, {'Dis'}, {}, {'n29'}, {[15.5, 2.5]}                     ;...
    {'n17'}, {'Dis'}, {}, {'n30'}, {[45.5, 2.5]}                     ;...
    {'n18'}, {'Dis'}, {}, {'n30'}, {[15.5, 28.5]}                    ;...
    {'n19'}, {'Dis'}, {}, {'n31'}, {[45.5, 28.5]}                    ;...
    {'n20'}, {'Mix'}, {'n00', 'n21'}, {}, {[15.5, 20.5]}               ;...
    {'m21'}, {'Mix'}, {'n01', 'n02'}, {}, {[15.5, 10.5]}               ;...
    {'n21'}, {'Spt'}, {'m21'}, {}, {[15.5, 10.5]}               ;...
    {'n22'}, {'Mix'}, {'n21', 'n03'}, {}, {[45.5, 20.5]}               ;...
    {'n23'}, {'Mix'}, {'n04', 'n24'}, {}, {[45.5, 20.5]}               ;...
    {'m24'}, {'Mix'}, {'n05', 'n06'}, {'n20', 'n22'}, {[15.5, 10.5]}       ;...
    {'n24'}, {'Spt'}, {'m24'}, {}, {[15.5, 10.5]}       ;...
    {'n25'}, {'Mix'}, {'n24', 'n07'}, {'n35'}, {[45.5, 10.5]}            ;...
    {'n26'}, {'Mix'}, {'n08', 'n27'}, {'n36'}, {[45.5, 10.5]}            ;...
    {'m27'}, {'Mix'}, {'n09', 'n10'}, {'n23', 'n25'}, {[15.5, 10.5]}       ;...
    {'n27'}, {'Spt'}, {'m27'}, {}, {[15.5, 10.5]}       ;...
    {'n28'}, {'Mix'}, {'n27', 'n11'}, {'n38'}, {[15.5, 20.5]}            ;...
    {'n29'}, {'Mix'}, {'n12', 'n30'}, {'n38'}, {[15.5, 20.5]}            ;...
    {'m30'}, {'Mix'}, {'n13', 'n14'}, {'n26', 'n28'}, {[15.5, 10.5]}       ;...
    {'n30'}, {'Spt'}, {'m30'}, {}, {[15.5, 10.5]}       ;...
    {'n31'}, {'Mix'}, {'n30', 'n15'}, {'n39'}, {[45.5, 20.5]}            ;...
    {'n32'}, {'Mix'}, {'n16', 'n33'}, {'n40'}, {[45.5, 20.5]}            ;...
    {'m33'}, {'Mix'}, {'n17', 'n18'}, {'n29', 'n31'}, {[15.5, 10.5]}       ;...
    {'n33'}, {'Spt'}, {'m33'}, {}, {[15.5, 10.5]}       ;...
    {'n34'}, {'Mix'}, {'n33', 'n19'}, {'n41'}, {[45.5, 10.5]}            ;...
    {'n35'}, {'Out'}, {'n20'}, {}, {[57.5, 15.5]}                    ;...
    {'n36'}, {'Out'}, {'n22'}, {}, {[57.5, 15.5]}                    ;...
    {'n37'}, {'Out'}, {'n23'}, {}, {[57.5, 15.5]}                    ;...
    {'n38'}, {'Out'}, {'n25'}, {}, {[57.5, 15.5]}                    ;...
    {'n39'}, {'Out'}, {'n26'}, {}, {[57.5, 15.5]}                    ;...
    {'n40'}, {'Out'}, {'n28'}, {}, {[57.5, 15.5]}                    ;...
    {'n41'}, {'Out'}, {'n29'}, {}, {[57.5, 15.5]}                    ;...
    {'n42'}, {'Out'}, {'n31'}, {}, {[57.5, 15.5]}                    ;...
    {'n43'}, {'Out'}, {'n32'}, {}, {[57.5, 15.5]}                    ;...
    {'n44'}, {'Out'}, {'n34'}, {}, {[57.5, 15.5]}                    ;...
    };

TB = cell2table(TB);
TB.Properties.VariableNames = {'vName','vType','vPre','vCond','vCp'};
vCp = TB.vCp;




%%
%return

% Type
vSize = cell(size(TB,1),1);
vDr   = cell(size(TB,1),1);
vDroplets = cell(size(TB,1),1);
vLocations = cell(size(TB,1),1);

% Compute initial sizes
for r = 1:size(TB,1)
    if (strcmp(TB.vType{r},'Dis'))
        vSize{r} = 16;
    else
        vSize{r} = 0;
    end
end

%% Process Information
% vName
% vType
% vPre
% vDroplets
% vLocations

% Given: {'vName','vType','vPre','vCond','vCp'}



%% Compute sizes

bRepeat = true;
while (bRepeat)
    bRepeat = false;
    for r = 1:size(TB,1)
        if (vSize{r}==0)
            if (isempty(TB.vPre{r}))
                vSize{r} = fcnDrGetSize(vDr{r});
            else
                tmpIsReady = true;
                for i = 1:length(TB.vPre{r})
                    tmpIsReady = tmpIsReady && vSize{strcmp(TB.vName,TB.vPre{r}{i})};
                end
                if (tmpIsReady)
                    idx1 = strcmp(TB.vName,TB.vPre{r}{1});
                    if (length(TB.vPre{r})==2)
                        idx2 = strcmp(TB.vName,TB.vPre{r}{2});
                    else
                        idx2 = 0;
                    end
                    switch TB.vType{r}
                        case 'Mix'
                            vSize{r} = vSize{idx1}+vSize{idx2};
                        case 'Dlt'
                            vSize{r} = (vSize{idx1}+vSize{idx2})/2;
                        case 'Spt'
                            vSize{r} = vSize{idx1}/2;
                        case 'Mag'
                            vSize{r} = vSize{idx1};
                        case 'Out'
                            vSize{r} = vSize{idx1};
                        otherwise
                            fprintf('Error: Unknown type %s\n', TB.vType{r});
                            return
                    end
                else
                    bRepeat = true;
                end
            end
        end
    end
end

%% Compute Droplets
for r = 1:size(TB,1)
    vDr{r} = fcnDrGetDroplet(vCp{r},vSize{r});
end

%% Compute droplets and locations

for r = 1:size(TB,1)
    if (length(TB.vPre{r})==1)
        idx1 = strcmp(TB.vName,TB.vPre{r}{1});
        idx2 = 0;
    elseif (length(TB.vPre{r})==2)
        idx1 = strcmp(TB.vName,TB.vPre{r}{1});
        idx2 = strcmp(TB.vName,TB.vPre{r}{2});
    else
        idx1 = 0;
        idx2 = 0;
    end
    switch TB.vType{r}
        case 'Dis'
            vDroplets{r} = {fcnDrGetDisDroplet(vDr{r},60,30)};
            vLocations{r} = vDr(r);
        case 'Mix'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}),...
                fcnDrGetDroplet(vCp{idx2},vSize{idx2})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1}),...
                fcnDrGetDroplet(vCp{r},vSize{idx2})};
        case 'Dlt'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}),...
                fcnDrGetDroplet(vCp{idx2},vSize{idx2})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1}),...
                fcnDrGetDroplet(vCp{r},vSize{idx2})};
        case 'Spt'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}/2),...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}/2)};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r}-[4 0],vSize{idx1}/2),...
                fcnDrGetDroplet(vCp{r}+[4 0],vSize{idx1}/2)};
        case 'Mag'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1})};
        case 'Out'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1})};
        otherwise
            fprintf('Error: Unknown type %s', vType{r});
            return
    end
end


%return

TB2 = [TB,...
    cell2table(vDroplets),...
    cell2table(vLocations),...
    cell2table(vSize),...
    cell2table(vDr)];

% Correct splits
splitCount = zeros(size(TB2,1),1);
for r = 1:size(TB2,1)
    preIdx = {[],[]};
    for preLocIdx = 1:size(TB2.vPre{r})
        preIdx{preLocIdx} = strcmp(TB2.vName,TB2.vPre{r}{preLocIdx});
        if (strcmp(TB2.vType{preIdx{preLocIdx}},'Spt'))
            if (splitCount(preIdx{preLocIdx})==0)
                TB2.vDroplets{r}{preLocIdx} = TB2.vDroplets{r}{preLocIdx} - [4 0 4 0];
                splitCount(preIdx{preLocIdx}) = splitCount(preIdx{preLocIdx}) + 1;
            else
                TB2.vDroplets{r}{preLocIdx} = TB2.vDroplets{r}{preLocIdx} + [4 0 4 0];
            end
        end
    end
end
    %if (strcmp(TB2.vType{r},'Spt')

for r = 1:size(TB2,1)
    %ScObj.mdAddMo('a5','Mix',{'a1','a2'},{a5j1s,a5j2s},{a5j1g,a5j2g});
    ScObj.mdAddMo(...
        TB2.vName{r},...
        TB2.vType{r},...
        TB2.vPre{r},...
        TB2.vDroplets{r},...
        TB2.vLocations{r},...
        TB2.vCond{r});
end

% Sanity checks:
for moId = 1:length(ScObj.MoList)
    for jobId = 1:length(ScObj.MoList(moId).jobList)
        % Check if start and end sizes are the same
        if ( (fcnDrGetSize(ScObj.MoList(moId).jobList(jobId).droplet))~=...
                (fcnDrGetSize(ScObj.MoList(moId).jobList(jobId).goal)) )
            fprintf('Error: %02d.%02d size mismatch!\n',moId,jobId);
            pause;
        end
        % Check if droplets are out of bounds
        if ( (~strcmp(ScObj.MoList(moId).type,'Dis')) && ...
                ( (fcnDrIsOutOfBounds(ScObj.MoList(moId).jobList(jobId).droplet)) || ...
                  (fcnDrIsOutOfBounds(ScObj.MoList(moId).jobList(jobId).goal)) ) )
            fprintf('Error: %02d.%02d out of bounds!\n',moId,jobId);
            pause;
        end
    end
end



end