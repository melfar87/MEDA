function TB2 = fcnLoadCovidBioassay(ScObj,bioassayId)

% TB = readcell('master_mix.log',...
%      'FileType','text');

clc
% TB = readtable('master_mix.log',...
%     'FileType','text',...
%     'ReadVariableNames',false,...
%     'Delimiter',{',',' '});
% head(TB)
if (strcmp(bioassayId,'rat'))
    TB = {...
        {'n00'}, {'Dis'}, {}, {}, {[10.0, 2.5]}, {};...
        {'n01'}, {'Dis'}, {}, {}, {[50.0, 2.5]}, {1,1};...
        {'n02'}, {'Dis'}, {}, {}, {[15.5, 27.5]}, {1,1};...
        {'n03'}, {'Dis'}, {}, {}, {[45.5, 27.5]}, {1,1};...
        {'n04'}, {'Dis'}, {}, {}, {[30.0, 2.5]}, {1,1};...
        {'n05'}, {'Dis'}, {}, {'n08'}, {[50.0, 2.5]}, {1,1};...
        {'n06'}, {'Dis'}, {}, {'n09'}, {[15.5, 27.5]}, {1,1};...
        {'n07'}, {'Dis'}, {}, {'n10'}, {[45.5, 27.5]}, {1,1};...
        {'n08'}, {'Mix'}, {'n00', 'n01'}, {}, {[15.5, 20.5]}, {1,1};...
        {'n09'}, {'Mix'}, {'n02', 'n14'}, {'n14'}, {[15.5, 20.5]}, {1,1};...
        {'n10'}, {'Mix'}, {'n03', 'n15'}, {'n15'}, {[15.5, 20.5]}, {1,1};...
        {'n11'}, {'Mix'}, {'n04', 'n05'}, {}, {[45.5, 10.5]}, {1,1};...
        {'n12'}, {'Mix'}, {'n06', 'n17'}, {'n17'}, {[45.5, 10.5]}, {1,1};...
        {'n13'}, {'Mix'}, {'n07', 'n18'}, {'n18'}, {[45.5, 10.5]}, {1,1};...
        {'n14'}, {'Spt'}, {'n08'}, {}, {[15.5, 10.5]}, {1,1};...
        {'n15'}, {'Spt'}, {'n09'}, {'n20', 'n09'}, {[15.5, 10.5]}, {1,1};...
        {'n16'}, {'Spt'}, {'n10'}, {'n21', 'n10'}, {[15.5, 10.5]}, {1,1};...
        {'n17'}, {'Spt'}, {'n11'}, {}, {[45.5, 20.5]}, {1,1};...
        {'n18'}, {'Spt'}, {'n12'}, {'n24', 'n12'}, {[45.5, 20.5]}, {1,1};...
        {'n19'}, {'Spt'}, {'n13'}, {'n25', 'n13'}, {[45.5, 20.5]}, {1,1};...
        {'n20'}, {'Dsc'}, {'n14'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n21'}, {'Dsc'}, {'n15'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n22'}, {'Dsc'}, {'n16'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n23'}, {'Out'}, {'n16'}, {}, {[57.5, 15.5]}, {1,1};...
        {'n24'}, {'Dsc'}, {'n17'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n25'}, {'Dsc'}, {'n18'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n26'}, {'Dsc'}, {'n19'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n27'}, {'Out'}, {'n19'}, {}, {[57.5, 15.5]}, {1,1};...
        };

elseif (strcmp(bioassayId,'pcr'))
    TB = {...
        {'n00'}, {'Dis'}, {}, {}, {[15.5, 2.5]}, {};...
        {'n01'}, {'Dis'}, {}, {}, {[45.5, 2.5]}, {1,1};...
        {'n02'}, {'Dis'}, {}, {}, {[15.5, 27.5]}, {1,1};...
        {'n03'}, {'Dis'}, {}, {}, {[45.5, 27.5]}, {1,1};...
        {'n04'}, {'Mix'}, {'n00', 'n01'}, {}, {[15.5, 20.5]}, {1,1};...
        {'n05'}, {'Mix'}, {'n02', 'n03'}, {}, {[45.5, 10.5]}, {1,1};...
        {'n06'}, {'Spt'}, {'n04'}, {}, {[25.5, 10.5]}, {1,1};...
        {'n07'}, {'Spt'}, {'n05'}, {'n08', 'n09'}, {[25.5, 10.5]}, {1,1};...
        {'n08'}, {'Dsc'}, {'n06'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n09'}, {'Mix'}, {'n06', 'n07'}, {'n06'}, {[15.5, 20.5]}, {1,1};...
        {'n10'}, {'Dsc'}, {'n07'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n11'}, {'Spt'}, {'n09'}, {'n10', 'n09'}, {[25.5, 10.5]}, {1,1};...
        {'n12'}, {'Dsc'}, {'n11'}, {}, {[2.5, 15.5]}, {1,1};...
        {'n13'}, {'Thm'}, {'n11'}, {}, {[15.5, 10.5]}, {2,1};...
        {'n14'}, {'Thm'}, {'n13'}, {}, {[45.5, 20.5]}, {1,1};...
        {'n15'}, {'Thm'}, {'n14'}, {'n14'}, {[15.5, 10.5]}, {1,1};...
        {'n16'}, {'Thm'}, {'n15'}, {'n15'}, {[45.5, 20.5]}, {1,1};...
        {'n17'}, {'Thm'}, {'n16'}, {'n16'}, {[15.5, 10.5]}, {1,1};...
        {'n18'}, {'Thm'}, {'n17'}, {'n17'}, {[45.5, 20.5]}, {1,1};...
        {'n19'}, {'Thm'}, {'n18'}, {'n18'}, {[15.5, 10.5]}, {1,1};...
        {'n20'}, {'Thm'}, {'n19'}, {'n19'}, {[45.5, 20.5]}, {1,1};...
        {'n21'}, {'Thm'}, {'n20'}, {'n20'}, {[15.5, 10.5]}, {1,1};...
        {'n22'}, {'Thm'}, {'n21'}, {'n21'}, {[45.5, 20.5]}, {1,1};...
        {'n23'}, {'Thm'}, {'n22'}, {'n22'}, {[15.5, 10.5]}, {1,1};...
        {'n24'}, {'Thm'}, {'n23'}, {'n23'}, {[45.5, 20.5]}, {1,1};...
        {'n25'}, {'Thm'}, {'n24'}, {'n24'}, {[15.5, 10.5]}, {1,1};...
        {'n26'}, {'Thm'}, {'n25'}, {'n25'}, {[45.5, 20.5]}, {1,1};...
        {'n27'}, {'Thm'}, {'n26'}, {'n26'}, {[15.5, 10.5]}, {1,1};...
        {'n28'}, {'Thm'}, {'n27'}, {'n27'}, {[45.5, 20.5]}, {1,1};...
        {'n29'}, {'Thm'}, {'n28'}, {'n28'}, {[15.5, 10.5]}, {1,1};...
        {'n30'}, {'Thm'}, {'n29'}, {'n29'}, {[45.5, 20.5]}, {1,1};...
        {'n31'}, {'Thm'}, {'n30'}, {'n30'}, {[15.5, 10.5]}, {1,1};...
        {'n32'}, {'Thm'}, {'n31'}, {'n31'}, {[45.5, 20.5]}, {1,1};...
        {'n33'}, {'Out'}, {'n32'}, {}, {[57.5, 15.5]}, {1,1};...
        };

else
    error('Unknown COVID bioassay type\nAbborting');
end

TB = cell2table(TB);
TB.Properties.VariableNames = {'vName','vType','vPre','vCond','vCp','vSptId'};
vCp = TB.vCp;




%%
%return

% Type
vSize = cell(size(TB,1),1);
vDr   = cell(size(TB,1),1);
vDroplets = cell(size(TB,1),1);
vLocations = cell(size(TB,1),1);

% Compute initial sizes
for r = 1:size(TB,1)
    if (strcmp(TB.vType{r},'Dis'))
        vSize{r} = 16;
    else
        vSize{r} = 0;
    end
end

%% Process Information
% vName
% vType
% vPre
% vDroplets
% vLocations

% Given: {'vName','vType','vPre','vCond','vCp'}



%% Compute sizes

bRepeat = true;
while (bRepeat)
    bRepeat = false;
    for r = 1:size(TB,1)
        if (vSize{r}==0)
            if (isempty(TB.vPre{r}))
                vSize{r} = fcnDrGetSize(vDr{r});
            else
                tmpIsReady = true;
                for i = 1:length(TB.vPre{r})
                    tmpIsReady = tmpIsReady && vSize{strcmp(TB.vName,TB.vPre{r}{i})};
                end
                if (tmpIsReady)
                    idx1 = strcmp(TB.vName,TB.vPre{r}{1});
                    if (length(TB.vPre{r})==2)
                        idx2 = strcmp(TB.vName,TB.vPre{r}{2});
                    else
                        idx2 = 0;
                    end
                    switch TB.vType{r}
                        case 'Mix'
                            vSize{r} = vSize{idx1}+vSize{idx2};
                        case 'Dlt'
                            vSize{r} = (vSize{idx1}+vSize{idx2})/2;
                        case 'Spt'
                            vSize{r} = vSize{idx1}/2;
                        case {'Mag','Thm'}
                            vSize{r} = vSize{idx1};
                        case {'Out','Dsc'}
                            vSize{r} = vSize{idx1};
                        otherwise
                            fprintf('Error: Unknown type %s\n', TB.vType{r});
                            return
                    end
                else
                    bRepeat = true;
                end
            end
        end
    end
end

%% Compute Droplets
for r = 1:size(TB,1)
    vDr{r} = fcnDrGetDroplet(vCp{r},vSize{r});
end

%% Compute droplets and locations

for r = 1:size(TB,1)
    if (length(TB.vPre{r})==1)
        idx1 = strcmp(TB.vName,TB.vPre{r}{1});
        idx2 = 0;
    elseif (length(TB.vPre{r})==2)
        idx1 = strcmp(TB.vName,TB.vPre{r}{1});
        idx2 = strcmp(TB.vName,TB.vPre{r}{2});
    else
        idx1 = 0;
        idx2 = 0;
    end
    switch TB.vType{r}
        case 'Dis'
            vDroplets{r} = {fcnDrGetDisDroplet(vDr{r},60,30)};
            vLocations{r} = vDr(r);
        case 'Mix'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}),...
                fcnDrGetDroplet(vCp{idx2},vSize{idx2})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1}),...
                fcnDrGetDroplet(vCp{r},vSize{idx2})};
        case 'Dlt'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}),...
                fcnDrGetDroplet(vCp{idx2},vSize{idx2})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1}),...
                fcnDrGetDroplet(vCp{r},vSize{idx2})};
        case 'Spt'
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}/2),...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1}/2)};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r}-[4 0],vSize{idx1}/2),...
                fcnDrGetDroplet(vCp{r}+[4 0],vSize{idx1}/2)};
        case {'Mag','Thm'}
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1})};
        case {'Out','Dsc'}
            vDroplets{r} = {...
                fcnDrGetDroplet(vCp{idx1},vSize{idx1})};
            vLocations{r} = {...
                fcnDrGetDroplet(vCp{r},vSize{idx1})};
            % Correct droplets
            W = ScObj.Width;
            H = ScObj.Height;
            dr = vLocations{r}{1};
            if (dr(1)<=1)
                tmpDelta = [(1-dr(1)),0,(1-dr(1)),0];
            elseif (dr(2)<=2)
                tmpDelta = [0,(1-dr(2)),0,(1-dr(2))];
            elseif (dr(3)>=(W-1))
                tmpDelta = [-(W-dr(3)),0,-(W-dr(3)),0];
            elseif (dr(4)>=(H-1))
                tmpDelta = [0,-(H-dr(4)),0,-(H-dr(4))];
            else
                fprintf('Error: %s cannot be dispensed!\n',mat2str(dr));
                tmpDelta = [0 0 0 0];
            end
            dr = dr + tmpDelta;
            vLocations{r}{1} = dr;
        otherwise
            fprintf('Error: Unknown type %s', vType{r});
            return
    end
end


%return

TB2 = [TB,...
    cell2table(vDroplets),...
    cell2table(vLocations),...
    cell2table(vSize),...
    cell2table(vDr)];

% Correct splits
%splitCount = zeros(size(TB2,1),1);
for r = 1:size(TB2,1)
    preIdx = {[],[]};
    for preLocIdx = 1:size(TB2.vPre{r})
        preIdx{preLocIdx} = strcmp(TB2.vName,TB2.vPre{r}{preLocIdx});
        if (strcmp(TB2.vType{preIdx{preLocIdx}},'Spt'))
            if (TB2.vSptId{r}{preLocIdx}==1)%(splitCount(preIdx{preLocIdx})==0)
                TB2.vDroplets{r}{preLocIdx} = TB2.vDroplets{r}{preLocIdx} - [4 0 4 0];
                %splitCount(preIdx{preLocIdx}) = splitCount(preIdx{preLocIdx}) + 1;
            else
                TB2.vDroplets{r}{preLocIdx} = TB2.vDroplets{r}{preLocIdx} + [4 0 4 0];
            end
        end
    end
end
    %if (strcmp(TB2.vType{r},'Spt')

for r = 1:size(TB2,1)
    %ScObj.mdAddMo('a5','Mix',{'a1','a2'},{a5j1s,a5j2s},{a5j1g,a5j2g});
    ScObj.mdAddMo(...
        TB2.vName{r},...
        TB2.vType{r},...
        TB2.vPre{r},...
        TB2.vDroplets{r},...
        TB2.vLocations{r},...
        TB2.vCond{r});
end

% Sanity checks:
for moId = 1:length(ScObj.MoList)
    for jobId = 1:length(ScObj.MoList(moId).jobList)
        % Check if start and end sizes are the same
        if ( (fcnDrGetSize(ScObj.MoList(moId).jobList(jobId).droplet))~=...
                (fcnDrGetSize(ScObj.MoList(moId).jobList(jobId).goal)) )
            fprintf('Error: %02d.%02d size mismatch!\n',moId,jobId);
            pause;
        end
        % Check if droplets are out of bounds
        if ( (~strcmp(ScObj.MoList(moId).type,'Dis')) && ...
                ( (fcnDrIsOutOfBounds(ScObj.MoList(moId).jobList(jobId).droplet)) || ...
                  (fcnDrIsOutOfBounds(ScObj.MoList(moId).jobList(jobId).goal)) ) )
            fprintf('Error: %02d.%02d out of bounds!\n',moId,jobId);
            pause;
        end
    end
end



end